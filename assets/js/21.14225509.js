(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{605:function(t,a,s){"use strict";s.r(a);var n=s(17),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"一、需求背景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、需求背景"}},[t._v("#")]),t._v(" 一、需求背景")]),t._v(" "),s("p",[t._v("原项目使用 tornado 框架动态渲染页面返回，现在需要慢慢引入前后端分离模式，考虑在新功能上用 Vue 实现页面，并且使新老页面可以相互跳转，共用同一套鉴权。")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"二、解决方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、解决方案"}},[t._v("#")]),t._v(" 二、解决方案")]),t._v(" "),s("h3",{attrs:{id:"_1-基本思路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本思路"}},[t._v("#")]),t._v(" 1. 基本思路")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("给新页面分配唯一路由（比如 "),s("code",[t._v("/example/")]),t._v("，以下配置以该路由举例 )，以该路由的开头的页面都会被 Nginx 通过路由正则匹配指向新的静态页面地址（ Vue 打包之后的页面），其他路由仍旧保持原来的路由匹配走原来的 tornado框架。")])]),t._v(" "),s("li",[s("p",[t._v("新老页面的相互跳转直接用 "),s("code",[t._v("href='xxx'")]),t._v(" 实现。")])]),t._v(" "),s("li",[s("p",[t._v("共用同一套鉴权的需求目前依赖使用同一cookie实现，在向后端请求时会自动带上cookie里的用户信息，只需要在后端接口加上鉴权装饰器即可，前端无需额外配置。")])])]),t._v(" "),s("h3",{attrs:{id:"_2-实现方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-实现方案"}},[t._v("#")]),t._v(" 2. 实现方案")]),t._v(" "),s("p",[t._v("为实现以上思路（主要是第1点，其他较为简单），需做三步处理：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("在 Nginx 里进行特殊配置，正则匹配唯一路由并转发（和普通静态页面部署有所区别）")])]),t._v(" "),s("li",[s("strong",[t._v("把前端路由模式从兼容性较好的 hash 模式改成 history 模式")])]),t._v(" "),s("li",[s("strong",[t._v("前端打包的 baseUrl 需要设置为 Nginx 上配置的给新页面的唯一路由")])])]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"三-具体实现流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三-具体实现流程"}},[t._v("#")]),t._v(" 三. 具体实现流程")]),t._v(" "),s("h3",{attrs:{id:"_1-nginx配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-nginx配置"}},[t._v("#")]),t._v(" 1. Nginx配置")]),t._v(" "),s("p",[s("strong",[t._v("想要实现的效果是匹配到"),s("code",[t._v("/example/")]),t._v("路由后，这个路由就被前端接管，接下来任何操作都由前端路由来控制")])]),t._v(" "),s("p",[t._v("添加以下配置至"),s("code",[t._v("nginx.conf")])]),t._v(" "),s("div",{staticClass:"language-conf extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# 匹配以/example/开头的路由，匹配后不匹配其他路由\t\t\nlocation ^~ /example/ {  \n    alias /example/dist/; # 使用 alias 指向准确目录之后由前端接管\n    index index.html;\n    autoindex on;\n    try_files $uri $uri/ /dist/index.html; # 前端 history 模式需加上该行配置，否则回车或刷新页面 404\n}\n")])])]),s("p",[t._v("配置后"),s("code",[t._v("nginx.conf")]),t._v("文件结构如下")]),t._v(" "),s("div",{staticClass:"language-conf extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("...              # 全局块\nevents {         # events块\n   ...\n}\nhttp      # http块\n{\n    ...   # http全局块\n    server        # server块\n    { \n        ...       # server全局块\n        location [PATTERN]   # location块\n        {\n            ...\n        }\n\n        # 添加的配置\n        location ^~ /example/ {    \t\t\t\n            alias /example/dist/;\n            index index.html;\n            autoindex on;\n            try_files $uri $uri/ /dist/index.html;\n        }\n        \n        location [PATTERN] \n        {\n            ...\n        }\n    }\n    server\n    {\n      ...\n    }\n    ...     # http全局块\n}\n")])])]),s("h4",{attrs:{id:"alias-和-root-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#alias-和-root-的区别"}},[t._v("#")]),t._v(" alias 和 root 的区别")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("alias的处理结果是："),s("strong",[t._v("使用alias路径替换location路径")])]),t._v(" "),s("div",{staticClass:"language-conf extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("location /example/ {\n    alias /home/www/example/;\n}\n")])])]),s("p",[t._v("在上面alias虚拟目录配置下，访问 "),s("code",[t._v("http://www.example.com/example/a.html")]),t._v(" 实际指定的是 "),s("code",[t._v("/home/www/example/a.html")]),t._v("。")])]),t._v(" "),s("li",[s("p",[t._v("root的处理结果是："),s("strong",[t._v("root路径＋location路径")])]),t._v(" "),s("div",{staticClass:"language-conf extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("location /example/ {\nroot /home/www/;\n}\n")])])]),s("p",[t._v("使用该配置 Nginx 就会去 "),s("code",[t._v("/home/www/example")]),t._v(" 下寻找 "),s("code",[t._v("http://www.example.com/example")]),t._v(" 的访问资源")])])]),t._v(" "),s("h3",{attrs:{id:"_2-配置前端路由模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-配置前端路由模式"}},[t._v("#")]),t._v(" 2. 配置前端路由模式")]),t._v(" "),s("p",[t._v("前端路由模式分为2种，一种是 "),s("code",[t._v("hash")]),t._v(" 模式，一种是 "),s("code",[t._v("history")]),t._v(" 模式")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("区别")]),t._v(" "),s("th",[s("code",[t._v("hash")]),t._v(" 模式")]),t._v(" "),s("th",[s("code",[t._v("history")]),t._v(" 模式")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("地址栏表现")]),t._v(" "),s("td",[t._v("带 "),s("code",[t._v("#")]),t._v(" 号")]),t._v(" "),s("td",[t._v("标准的 "),s("code",[t._v("Url")]),t._v(" 格式，不带 "),s("code",[t._v("#")])])]),t._v(" "),s("tr",[s("td",[t._v("路由的跳转实现")]),t._v(" "),s("td",[s("code",[t._v("window.onhashchange")]),t._v(" 监听 "),s("code",[t._v("hash")]),t._v(" 的改变")]),t._v(" "),s("td",[s("code",[t._v("pushState")]),t._v(" 或者 "),s("code",[t._v("replaceState")]),t._v(" API 改变路由")])]),t._v(" "),s("tr",[s("td",[t._v("页面刷新")]),t._v(" "),s("td",[t._v("请求的地址中不携带 "),s("code",[t._v("#")]),t._v(" 后面的内容，所以不需要后端的配合，也不会出现 404")]),t._v(" "),s("td",[t._v("请求的是当前地址的完整路径，需要服务器做特殊处理，否则会出现 404")])]),t._v(" "),s("tr",[s("td",[t._v("兼容性")]),t._v(" "),s("td",[t._v("可以兼容一些低版本的浏览器")]),t._v(" "),s("td",[t._v("不兼容低版本浏览器")])])])]),t._v(" "),s("p",[t._v("一般实际开发场景中，用 hash 模式较为常见，")]),t._v(" "),s("p",[t._v("一是因为兼容性好（history 模式是 Html5 后提出的，故不兼容低版本浏览器），")]),t._v(" "),s("p",[t._v("二是 hash 模式不需要在 Nginx 上特殊配置。")]),t._v(" "),s("p",[t._v("若需要Url整洁或是别的需求，则考虑 history 模式，一切以实际开发需求为准。")]),t._v(" "),s("p",[t._v("具体可见 "),s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/347739648",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vue-router hash和history的区别")])]),t._v(" "),s("h4",{attrs:{id:"具体配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#具体配置"}},[t._v("#")]),t._v(" 具体配置")]),t._v(" "),s("p",[t._v("目前我们采用 history 模式主要是因为原项目是标准的Url格式，此处做统一，配置如下：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// router/index.js")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" createRouter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" createWebHistory "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue-router'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" routes "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 本地开发时因为example路由下没有页面，直接重定向到A页面")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/example'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        redirect"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/example/a'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/example/a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ExampleA'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("component")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'../views/ExampleA.vue'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        meta"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        title"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'A页面'")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/example/b'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ExampleB'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("component")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'../views/ExampleB.vue'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        meta"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        title"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'B页面'")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 采用history模式")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" router "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createRouter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    mode"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'history'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    history"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createWebHistory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n    routes\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" router\n")])])]),s("h4",{attrs:{id:"配置说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置说明"}},[t._v("#")]),t._v(" 配置说明")]),t._v(" "),s("p",[t._v("需在 Nginx 做特殊配置（添加 "),s("code",[t._v("try_files $uri $uri/ /dist/index.html;")]),t._v(" 来保证回车或刷新时不出现404）。")]),t._v(" "),s("p",[t._v("这里的"),s("code",[t._v("/dist/index.html")]),t._v("地址需根据实际Nginx配置的根目录做调整，确保能重定向到前端的index页面即可。")]),t._v(" "),s("h3",{attrs:{id:"_3-前端打包配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-前端打包配置"}},[t._v("#")]),t._v(" 3. 前端打包配置")]),t._v(" "),s("p",[t._v("目前新页面使用的脚手架为 Vite，故在"),s("code",[t._v("vite.config.js")]),t._v("里加上"),s("code",[t._v('base: "/example/"')]),t._v("，如下（Vue-Cli也可以找到类似的配置）")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// vite.config.js")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" defineConfig "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vite'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" vue "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@vitejs/plugin-vue'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://vitejs.dev/config/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineConfig")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  plugins"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  base"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/example/"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" # 其他配置\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("这里的 "),s("code",[t._v("base")]),t._v(" 表示 "),s("strong",[t._v("开发或生产环境服务的公共基础路径")]),t._v("，默认值为"),s("code",[t._v("'/'")]),t._v("，")]),t._v(" "),s("p",[t._v("此处需设为Nginx上配置的唯一匹配路由，主要是保证打包后的资源都能正常访问")]),t._v(" "),s("p",[t._v("以下搬运Vite官网对该配置字段的介绍：")]),t._v(" "),s("blockquote",[s("p",[t._v("如果你需要在嵌套的公共路径下部署项目，只需指定 base 配置项，然后所有资源的路径都将据此配置重写。这个选项也可以通过命令行参数指定，例如 vite build --base=/my/public/path/。")])]),t._v(" "),s("blockquote",[s("p",[t._v("由 JS 引入的资源 URL，CSS 中的 url() 引用以及 .html 文件中引用的资源在构建过程中都会自动调整，以适配此选项。")])]),t._v(" "),s("blockquote",[s("p",[t._v("当然，情况也有例外，当访问过程中需要使用动态连接的 url 时，可以使用全局注入的 import.meta.env.BASE_URL 变量，它的值为公共基础路径。注意，这个变量在构建时会被静态替换，因此，它必须按 import.meta.env.BASE_URL 的原样出现（例如 import.meta.env['BASE_URL'] 是无效的）")])]),t._v(" "),s("hr")])}),[],!1,null,null,null);a.default=e.exports}}]);